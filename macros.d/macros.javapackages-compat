# Copyright (c) 2012-2016, Red Hat, Inc
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of Red Hat nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Authors: Stanislav Ochotnicky <sochotnicky@redhat.com>
#          Mikolaj Izdebski <mizdebsk@redhat.com>


# %mvn_install_pom - Resolve the pom as much as possible and install it
#
# Usage: %mvn_install_pom <source pom> <output pom>
#
%mvn_install_pom @{pyinterpreter} @{javadir}-utils/install_pom.py

#==============================================================================
#
# add_maven_depmap is simplified version of jpackage-style add_to_maven_depmap
# -f addition to fragment name
# -a is "g1:a1,g2:a2" formatted string with additional depmaps (groupId:artifactId,...)
# -v is "v1,v2" formatted string with additional compatibility versions
#    supposed to be provided (jar,pom will be renamed to -%{version} variants
#    and additional symlinks optionally created)
# %1 is the pom filename relative to mavenpomdir
# %2 is the path to jar file (when omitted we deal with parent pom file without jar)
#
# add_maven_depmap automatically parses pom file and it will fail with incorrect pom
# or jar filename
#
# in the end add_maven_depmap optionally moves jar and pom file to
# -%{version} variant and can create additional versioned symlinks

%add_maven_depmap(f:a:v:) \
set -e \
# default values \
%if %# == 0 \
   _pompart="JPP-%{name}.pom" \
   _jarpart="%{name}.jar" \
%else \
   _pompart="%1" \
   _jarpart="%2" \
%endif \
_filelist=".mfiles%{-f*:-%{-f*}}" \
install -dm 755 %{buildroot}%{_datadir}/maven-metadata \
_jbase= \
_jpath= \
for _dir in %{_jnidir} %{_javadir}; do \
    if [ -f %{buildroot}$_dir/$_jarpart ]; then \
	_jbase="%{buildroot}$_dir" \
	_jpath="$_jbase/$_jarpart" \
    fi \
done \
%if %# != 1 \
    [ -z "$_jpath" ] && (echo "%0 error: $_jarpart - file not found" 1>&2; exit 1) \
%endif \
@{pyinterpreter} @{javadir}-utils/maven_depmap.py %{-a} %{-v*:-r %{-v*}} \\\
                 --pom-base %{buildroot}%{_mavenpomdir} \\\
                 --jar-base "$_jbase" \\\
                 %{buildroot}%{_datadir}/maven-metadata/%{name}%{-f*:-%{-f*}}.xml \\\
                 %{buildroot}%{_mavenpomdir}/$_pompart \\\
%if %# == 2 \
          "${_jpath}" \\\
%endif \
%if %# == 0 \
          "${_jpath}" \\\
%endif \
        >> ${_filelist} \
sed -i 's:%{buildroot}::' ${_filelist} \
sort -u -o ${_filelist} ${_filelist} \
\
%{nil}
