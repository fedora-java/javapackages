<?xml version="1.0" encoding="US-ASCII"?>
<configuration xmlns="http://fedorahosted.org/xmvn/CONFIG/2.0.0">
  <resolverSettings>
    <metadataRepositories>
      <repository>/usr/share/maven-metadata</repository>
    </metadataRepositories>
    <skippedPlugins>
      <!-- Version of Java and bytecode level is always fixed in distro -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <!-- Static analysis and code style is upstream's business -->
      <plugin>
        <groupId>org.codehaus.moj</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.spotbug</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
      </plugin>
      <!-- Code coverage is upstream's business -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
      </plugin>
      <!-- Release auditing is upstream's business -->
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
      </plugin>
      <!-- Cannot code sign in downstream builds -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
      </plugin>
      <!-- Cannot push artifacts to Nexus server -->
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
      </plugin>
    </skippedPlugins>
  </resolverSettings>
  <installerSettings>
    <metadataDir>usr/share/maven-metadata</metadataDir>
  </installerSettings>
  <artifactManagement>
    <rule>
      <optional>true</optional>
      <artifactGlob>
        <classifier>*?</classifier>
      </artifactGlob>
      <targetPackage>__noinstall</targetPackage>
    </rule>
  </artifactManagement>
  <repositories>
    <repository>
      <id>base-raw-pom</id>
      <type>jpp</type>
      <properties>
        <root>usr/share/maven-poms</root>
      </properties>
      <filter>
        <equals>
          <extension/>
          <string>pom</string>
        </equals>
      </filter>
    </repository>
    <repository>
      <id>base-jar</id>
      <type>jpp</type>
      <properties>
        <root>usr/share/java</root>
      </properties>
      <filter>
        <or>
          <and>
            <equals>
              <extension/>
              <string>jar</string>
            </equals>
            <not>
              <equals>
                <property>native</property>
                <string>true</string>
              </equals>
            </not>
          </and>
          <!-- Maybe /usr/share/java is not the best place to store
               ZIP files, but packages are doing so anyways and
               allowing ZIPs here simplifies packaging.  TODO: find a
               better location for ZIP files.  -->
          <equals>
            <extension/>
            <string>zip</string>
          </equals>
        </or>
      </filter>
    </repository>
    <repository>
      <id>base-jenkins-plugin</id>
      <type>jpp</type>
      <properties>
        <root>usr/share/jenkins/plugins</root>
      </properties>
      <filter>
        <equals>
          <extension/>
          <string>hpi</string>
        </equals>
      </filter>
    </repository>
    <repository>
      <id>base-ivy-xml</id>
      <type>jpp</type>
      <properties>
        <root>usr/share/ivy-xmls</root>
      </properties>
      <filter>
        <and>
          <equals>
            <extension/>
            <string>xml</string>
          </equals>
          <equals>
            <property>type</property>
            <string>ivy</string>
          </equals>
        </and>
      </filter>
    </repository>
    <repository>
      <id>base-jni</id>
      <type>jpp</type>
      <properties>
        <root>usr/lib/java</root>
      </properties>
      <filter>
        <and>
          <equals>
            <extension/>
            <string>jar</string>
          </equals>
          <equals>
            <property>native</property>
            <string>true</string>
          </equals>
        </and>
      </filter>
    </repository>
    <repository>
      <id>base-install</id>
      <type>compound</type>
      <configuration>
        <repositories>
          <repository>base-raw-pom</repository>
          <repository>base-jni</repository>
          <repository>base-jar</repository>
          <repository>base-jenkins-plugin</repository>
          <repository>base-ivy-xml</repository>
        </repositories>
      </configuration>
    </repository>
    <repository>
      <id>install</id>
      <type>compound</type>
      <configuration>
        <repositories>
          <repository>base-install</repository>
        </repositories>
      </configuration>
    </repository>
  </repositories>
</configuration>
